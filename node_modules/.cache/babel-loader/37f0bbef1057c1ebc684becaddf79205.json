{"ast":null,"code":"var _jsxFileName = \"/Users/caseydzuong/Desktop/movierama/src/components/movies.jsx\";\nimport React, { Component } from \"react\";\nimport { getMovies } from \"../services/fakeMovieService\";\nimport MoviesTable from \"./moviesTable\";\nimport ListGroup from \"../common/listgroup\";\nimport Pagination from \"../common/pagination\";\nimport { paginate } from \"../utils/paginate\";\nimport { getGenres } from \"../services/fakeGenreService\";\nimport _ from \"lodash\";\n\nclass Movies extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: [],\n      genres: [],\n      currentPage: 1,\n      pageSize: 4,\n      sortColumn: {\n        path: \"title\",\n        order: \"asc\"\n      }\n    };\n\n    this.handleDelete = movie => {\n      const movies = this.state.movies.filter(m => m._id !== movie._id);\n      this.setState({\n        movies\n      });\n    };\n\n    this.handleLike = movie => {\n      const movies = [...this.state.movies];\n      const index = movies.indexOf(movie);\n      movies[index] = { ...movies[index]\n      };\n      movies[index].liked = !movies[index].liked;\n      this.setState({\n        movies\n      });\n    };\n\n    this.handlePageChange = page => {\n      this.setState({\n        currentPage: page\n      });\n    };\n\n    this.handleGenreSelect = genre => {\n      this.setState({\n        selectedGenre: genre,\n        currentPage: 1\n      });\n    };\n\n    this.handleSort = sortColumn => {\n      this.setState({\n        sortColumn\n      });\n    };\n\n    this.getPageData = () => {\n      const filtered = selectedGenre && selectedGenre._id ? allMovies.filter(m => m.genre._id === selectedGenre._id) : allMovies;\n\n      const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n\n      const movies = paginate(sorted, currentPage, pageSize);\n      return {\n        totalCount: filtered.length,\n        data: movies\n      };\n    };\n  }\n\n  componentDidMount() {\n    const genres = [{\n      _id: \"\",\n      name: \"All genres\"\n    }, ...getGenres()];\n    this.setState({\n      movies: getMovies(),\n      genres\n    });\n  }\n\n  render() {\n    const {\n      length: count\n    } = this.state.movies;\n    const {\n      pageSize,\n      currentPage,\n      sortColumn,\n      selectedGenre,\n      movies: allMovies\n    } = this.state;\n    if ({\n      count\n    } === 0) return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 33\n      }\n    }, \"There are no movies in the database.\");\n    const {\n      totalCount,\n      data\n    } = this.getPageData();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ListGroup, {\n      items: this.state.genres,\n      selectedItem: this.state.selectedGenre,\n      onItemSelect: this.handleGenreSelect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }, \"Showing \", filtered.length, \" movies in the database.\"), /*#__PURE__*/React.createElement(MoviesTable, {\n      movies: movies,\n      sortColumn: sortColumn,\n      onLike: this.handleLike,\n      onDelete: this.handleDelete,\n      onSort: this.handleSort,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Pagination, {\n      itemsCount: filtered.length,\n      pageSize: pageSize,\n      onPageChange: this.handlePageChange,\n      currentPage: currentPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default Movies;","map":{"version":3,"sources":["/Users/caseydzuong/Desktop/movierama/src/components/movies.jsx"],"names":["React","Component","getMovies","MoviesTable","ListGroup","Pagination","paginate","getGenres","_","Movies","state","movies","genres","currentPage","pageSize","sortColumn","path","order","handleDelete","movie","filter","m","_id","setState","handleLike","index","indexOf","liked","handlePageChange","page","handleGenreSelect","genre","selectedGenre","handleSort","getPageData","filtered","allMovies","sorted","orderBy","totalCount","length","data","componentDidMount","name","render","count"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { getMovies } from \"../services/fakeMovieService\";\nimport MoviesTable from \"./moviesTable\";\nimport ListGroup from \"../common/listgroup\";\nimport Pagination from \"../common/pagination\";\nimport { paginate } from \"../utils/paginate\";\nimport { getGenres } from \"../services/fakeGenreService\";\nimport _ from \"lodash\";\n\nclass Movies extends Component {\n  state = {\n    movies: [],\n    genres: [],\n    currentPage: 1,\n    pageSize: 4,\n    sortColumn: { path: \"title\", order: \"asc\" },\n  };\n\n  componentDidMount() {\n    const genres = [{ _id: \"\", name: \"All genres\" }, ...getGenres()];\n    this.setState({ movies: getMovies(), genres });\n  }\n\n  handleDelete = (movie) => {\n    const movies = this.state.movies.filter((m) => m._id !== movie._id);\n    this.setState({ movies });\n  };\n\n  handleLike = (movie) => {\n    const movies = [...this.state.movies];\n    const index = movies.indexOf(movie);\n    movies[index] = { ...movies[index] };\n    movies[index].liked = !movies[index].liked;\n    this.setState({ movies });\n  };\n\n  handlePageChange = (page) => {\n    this.setState({ currentPage: page });\n  };\n\n  handleGenreSelect = (genre) => {\n    this.setState({ selectedGenre: genre, currentPage: 1 });\n  };\n\n  handleSort = (sortColumn) => {\n    this.setState({ sortColumn });\n  };\n\n  getPageData = () => {\n    const filtered =\n      selectedGenre && selectedGenre._id\n        ? allMovies.filter((m) => m.genre._id === selectedGenre._id)\n        : allMovies;\n\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n\n    const movies = paginate(sorted, currentPage, pageSize);\n\n    return { totalCount: filtered.length, data: movies };\n  };\n\n  render() {\n    const { length: count } = this.state.movies;\n    const {\n      pageSize,\n      currentPage,\n      sortColumn,\n      selectedGenre,\n      movies: allMovies,\n    } = this.state;\n\n    if ({ count } === 0) return <p>There are no movies in the database.</p>;\n\n    const { totalCount, data } = this.getPageData();\n\n    return (\n      <div className=\"row\">\n        <div className=\"col-3\">\n          <ListGroup\n            items={this.state.genres}\n            selectedItem={this.state.selectedGenre}\n            onItemSelect={this.handleGenreSelect}\n          />\n        </div>\n        <div className=\"col\">\n          <p>Showing {filtered.length} movies in the database.</p>\n          <MoviesTable\n            movies={movies}\n            sortColumn={sortColumn}\n            onLike={this.handleLike}\n            onDelete={this.handleDelete}\n            onSort={this.handleSort}\n          />\n          <Pagination\n            itemsCount={filtered.length}\n            pageSize={pageSize}\n            onPageChange={this.handlePageChange}\n            currentPage={currentPage}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Movies;\n"]},"metadata":{},"sourceType":"module"}