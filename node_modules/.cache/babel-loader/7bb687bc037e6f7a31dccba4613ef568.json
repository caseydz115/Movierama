{"ast":null,"code":"import _objectSpread from\"/Users/caseydzuong/Desktop/movierama/movierama/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"/Users/caseydzuong/Desktop/movierama/movierama/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"/Users/caseydzuong/Desktop/movierama/movierama/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/caseydzuong/Desktop/movierama/movierama/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/caseydzuong/Desktop/movierama/movierama/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/caseydzuong/Desktop/movierama/movierama/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import{Link}from\"react-router-dom\";import MoviesTable from\"./moviesTable\";import ListGroup from\"../common/listGroup\";import Pagination from\"../common/pagination\";import{getMovies,deleteMovie}from\"../services/fakeMovieService\";import{getGenres}from\"../services/fakeGenreService\";import{paginate}from\"../utils/paginate\";import NavBar from\"./navBar\";import _ from\"lodash\";import SearchBox from\"./searchBox\";var Movies=/*#__PURE__*/function(_Component){_inherits(Movies,_Component);var _super=_createSuper(Movies);function Movies(){var _this;_classCallCheck(this,Movies);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={movies:[],genres:[],currentPage:1,pageSize:4,searchQuery:\"\",selectedGenre:null,sortColumn:{path:\"title\",order:\"asc\"}};_this.handleDelete=function(movie){var movies=_this.state.movies.filter(function(m){return m._id!==movie._id;});_this.setState({movies:movies});deleteMovie(movie._id);};_this.handleLike=function(movie){var movies=_toConsumableArray(_this.state.movies);var index=movies.indexOf(movie);movies[index]=_objectSpread({},movies[index]);movies[index].liked=!movies[index].liked;_this.setState({movies:movies});};_this.handlePageChange=function(page){_this.setState({currentPage:page});};_this.handleGenreSelect=function(genre){_this.setState({selectedGenre:genre,searchQuery:\"\",currentPage:1});};_this.handleSearch=function(query){_this.setState({searchQuery:query,selectedGenre:null,currentPage:1});};_this.handleSort=function(sortColumn){_this.setState({sortColumn:sortColumn});};_this.getPagedData=function(){var _this$state=_this.state,pageSize=_this$state.pageSize,currentPage=_this$state.currentPage,sortColumn=_this$state.sortColumn,selectedGenre=_this$state.selectedGenre,searchQuery=_this$state.searchQuery,allMovies=_this$state.movies;var filtered=allMovies;if(searchQuery)filtered=allMovies.filter(function(m){return m.title.toLowerCase().startsWith(searchQuery.toLowerCase());});else if(selectedGenre&&selectedGenre._id)filtered=allMovies.filter(function(m){return m.genre._id===selectedGenre._id;});var sorted=_.orderBy(filtered,[sortColumn.path],[sortColumn.order]);var movies=paginate(sorted,currentPage,pageSize);return{totalCount:filtered.length,data:movies};};return _this;}_createClass(Movies,[{key:\"componentDidMount\",value:function componentDidMount(){var genres=[{_id:\"\",name:\"All Genres\"}].concat(_toConsumableArray(getGenres()));this.setState({movies:getMovies(),genres:genres});}},{key:\"render\",value:function render(){var count=this.state.movies.length;var _this$state2=this.state,pageSize=_this$state2.pageSize,currentPage=_this$state2.currentPage,sortColumn=_this$state2.sortColumn,searchQuery=_this$state2.searchQuery;if(count===0)return/*#__PURE__*/React.createElement(\"p\",null,\"There are no movies in the database.\");var _this$getPagedData=this.getPagedData(),totalCount=_this$getPagedData.totalCount,movies=_this$getPagedData.data;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(NavBar,null),/*#__PURE__*/React.createElement(\"main\",{className:\"container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-3\"},/*#__PURE__*/React.createElement(ListGroup,{items:this.state.genres,selectedItem:this.state.selectedGenre,onItemSelect:this.handleGenreSelect})),/*#__PURE__*/React.createElement(\"div\",{className:\"col\"},/*#__PURE__*/React.createElement(Link,{to:\"/movies/new\",className:\"btn btn-primary\",style:{marginBottom:20}},\"New Movie\"),/*#__PURE__*/React.createElement(\"p\",null,\"Showing \",totalCount,\" movies in the database.\"),/*#__PURE__*/React.createElement(SearchBox,{value:searchQuery,onChange:this.handleSearch}),/*#__PURE__*/React.createElement(MoviesTable,{movies:movies,sortColumn:sortColumn,onLike:this.handleLike,onDelete:this.handleDelete,onSort:this.handleSort}),/*#__PURE__*/React.createElement(Pagination,{itemsCount:totalCount,pageSize:pageSize,currentPage:currentPage,onPageChange:this.handlePageChange})))));}}]);return Movies;}(Component);export default Movies;","map":{"version":3,"sources":["/Users/caseydzuong/Desktop/movierama/movierama/src/components/movies.jsx"],"names":["React","Component","Link","MoviesTable","ListGroup","Pagination","getMovies","deleteMovie","getGenres","paginate","NavBar","_","SearchBox","Movies","state","movies","genres","currentPage","pageSize","searchQuery","selectedGenre","sortColumn","path","order","handleDelete","movie","filter","m","_id","setState","handleLike","index","indexOf","liked","handlePageChange","page","handleGenreSelect","genre","handleSearch","query","handleSort","getPagedData","allMovies","filtered","title","toLowerCase","startsWith","sorted","orderBy","totalCount","length","data","name","count","marginBottom"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport MoviesTable from \"./moviesTable\";\nimport ListGroup from \"../common/listGroup\";\nimport Pagination from \"../common/pagination\";\nimport { getMovies, deleteMovie } from \"../services/fakeMovieService\";\nimport { getGenres } from \"../services/fakeGenreService\";\nimport { paginate } from \"../utils/paginate\";\nimport NavBar from \"./navBar\";\nimport _ from \"lodash\";\nimport SearchBox from \"./searchBox\";\n\nclass Movies extends Component {\n  state = {\n    movies: [],\n    genres: [],\n    currentPage: 1,\n    pageSize: 4,\n    searchQuery: \"\",\n    selectedGenre: null,\n    sortColumn: { path: \"title\", order: \"asc\" },\n  };\n\n  componentDidMount() {\n    const genres = [{ _id: \"\", name: \"All Genres\" }, ...getGenres()];\n\n    this.setState({ movies: getMovies(), genres });\n  }\n\n  handleDelete = (movie) => {\n    const movies = this.state.movies.filter((m) => m._id !== movie._id);\n    this.setState({ movies });\n\n    deleteMovie(movie._id);\n  };\n\n  handleLike = (movie) => {\n    const movies = [...this.state.movies];\n    const index = movies.indexOf(movie);\n    movies[index] = { ...movies[index] };\n    movies[index].liked = !movies[index].liked;\n    this.setState({ movies });\n  };\n\n  handlePageChange = (page) => {\n    this.setState({ currentPage: page });\n  };\n\n  handleGenreSelect = (genre) => {\n    this.setState({ selectedGenre: genre, searchQuery: \"\", currentPage: 1 });\n  };\n\n  handleSearch = (query) => {\n    this.setState({ searchQuery: query, selectedGenre: null, currentPage: 1 });\n  };\n\n  handleSort = (sortColumn) => {\n    this.setState({ sortColumn });\n  };\n\n  getPagedData = () => {\n    const {\n      pageSize,\n      currentPage,\n      sortColumn,\n      selectedGenre,\n      searchQuery,\n      movies: allMovies,\n    } = this.state;\n\n    let filtered = allMovies;\n    if (searchQuery)\n      filtered = allMovies.filter((m) =>\n        m.title.toLowerCase().startsWith(searchQuery.toLowerCase())\n      );\n    else if (selectedGenre && selectedGenre._id)\n      filtered = allMovies.filter((m) => m.genre._id === selectedGenre._id);\n\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n\n    const movies = paginate(sorted, currentPage, pageSize);\n\n    return { totalCount: filtered.length, data: movies };\n  };\n\n  render() {\n    const { length: count } = this.state.movies;\n    const { pageSize, currentPage, sortColumn, searchQuery } = this.state;\n\n    if (count === 0) return <p>There are no movies in the database.</p>;\n\n    const { totalCount, data: movies } = this.getPagedData();\n\n    return (\n      <React.Fragment>\n        <NavBar />\n        <main className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-3\">\n              <ListGroup\n                items={this.state.genres}\n                selectedItem={this.state.selectedGenre}\n                onItemSelect={this.handleGenreSelect}\n              />\n            </div>\n            <div className=\"col\">\n              <Link\n                to=\"/movies/new\"\n                className=\"btn btn-primary\"\n                style={{ marginBottom: 20 }}\n              >\n                New Movie\n              </Link>\n              <p>Showing {totalCount} movies in the database.</p>\n              <SearchBox value={searchQuery} onChange={this.handleSearch} />\n              <MoviesTable\n                movies={movies}\n                sortColumn={sortColumn}\n                onLike={this.handleLike}\n                onDelete={this.handleDelete}\n                onSort={this.handleSort}\n              />\n              <Pagination\n                itemsCount={totalCount}\n                pageSize={pageSize}\n                currentPage={currentPage}\n                onPageChange={this.handlePageChange}\n              />\n            </div>\n          </div>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Movies;\n"]},"metadata":{},"sourceType":"module"}