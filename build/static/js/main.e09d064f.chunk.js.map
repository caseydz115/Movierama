{"version":3,"sources":["common/like.jsx","common/tableHeader.jsx","common/tableBody.jsx","common/table.jsx","components/moviesTable.jsx","common/listGroup.jsx","common/pagination.jsx","services/fakeGenreService.js","services/fakeMovieService.js","utils/paginate.js","components/navBar.jsx","components/searchBox.jsx","components/movies.jsx","components/customers.jsx","components/notFound.jsx","common/input.jsx","common/select.jsx","common/form.jsx","components/loginForm.jsx","components/movieForm.jsx","components/start.jsx","components/registerForm.jsx","App.js","serviceWorker.js","index.js"],"names":["Like","props","classes","liked","onClick","style","cursor","class","aria-hidden","TableHeader","raiseSort","path","sortColumn","order","onSort","renderSortIcon","column","className","this","columns","map","key","label","Component","TableBody","renderCell","item","content","_","get","createKey","_id","data","Table","MoviesTable","movie","Link","to","title","onLike","onDelete","movies","ListGroup","items","textProperty","valueProperty","onItemSelect","selectedItem","defaultProps","Pagination","itemsCount","pageSize","currentPage","onPageChange","console","log","pagesCount","Math","ceil","pages","range","page","genres","name","getGenres","filter","g","genre","numberInStock","dailyRentalRate","publishDate","saveMovie","movieInDb","find","m","genresAPI","genreId","Date","now","push","deleteMovie","id","splice","indexOf","paginate","pageNumber","startIndex","slice","take","value","NavBar","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","SearchBox","onChange","placeholder","e","currentTarget","Movies","state","searchQuery","selectedGenre","handleDelete","setState","handleLike","index","handlePageChange","handleGenreSelect","handleSearch","query","handleSort","getPagedData","allMovies","filtered","toLowerCase","startsWith","orderBy","totalCount","length","count","Fragment","marginBottom","Customers","notFound","Input","error","rest","htmlFor","autoFocus","Select","options","option","Form","errors","validate","result","Joi","schema","abortEarly","details","message","validateProperty","obj","handleSubmit","preventDefault","doSubmit","handleChange","input","errorMessage","disabled","LoginForm","username","password","string","required","React","createRef","onSubmit","renderInput","renderButton","MovieForm","number","min","max","history","movieId","match","params","replace","mapToViewModel","renderSelect","Start","fontSize","RegisterForm","email","App","Switch","Route","component","Rentals","NotFound","Redirect","from","exact","Boolean","window","location","hostname","ReactDOM","render","StrictMode","BrowserRouter","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.e09d064f.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Like = (props) => {\n  let classes = \"fa fa-heart\";\n  if (!props.liked) classes += \"-o\";\n\n  return (\n    <i\n      onClick={props.onClick}\n      style={{ cursor: \"pointer\" }}\n      class={classes}\n      aria-hidden=\"true\"\n    ></i>\n  );\n};\n\nexport default Like;\n","import React, { Component } from \"react\";\n\nclass TableHeader extends Component {\n  raiseSort = (path) => {\n    const sortColumn = { ...this.props.sortColumn };\n    if (sortColumn.path === path)\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\n    else {\n      sortColumn.path = path;\n      sortColumn.order = \"asc\";\n    }\n    this.props.onSort(sortColumn);\n  };\n\n  renderSortIcon = (column) => {\n    const { sortColumn } = this.props;\n    if (column.path !== sortColumn.path) return null;\n    if (sortColumn.order === \"asc\") return <i className=\"fa fa-sort-asc\"></i>;\n    return <i className=\"fa fa-sort-desc\"></i>;\n  };\n\n  render() {\n    return (\n      <thead>\n        <tr>\n          {this.props.columns.map((column) => (\n            <th\n              className=\"clickable\"\n              key={column.path || column.key}\n              onClick={() => this.raiseSort(column.path)}\n            >\n              {column.label} {this.renderSortIcon(column)}\n            </th>\n          ))}\n        </tr>\n      </thead>\n    );\n  }\n}\n\nexport default TableHeader;\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\n\nclass TableBody extends Component {\n  renderCell = (item, column) => {\n    if (column.content) return column.content(item);\n    return _.get(item, column.path);\n  };\n\n  createKey = (item, column) => {\n    return item._id + (column.path || column.key);\n  };\n  render() {\n    const { data, columns } = this.props;\n\n    return (\n      <tbody>\n        {data.map((item) => (\n          <tr key={item._id}>\n            {columns.map((column) => (\n              <td key={this.createKey(item, column)}>\n                {this.renderCell(item, column)}\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    );\n  }\n}\n\nexport default TableBody;\n","import React from \"react\";\nimport TableHeader from \"./tableHeader\";\nimport TableBody from \"./tableBody\";\n\nconst Table = ({ columns, sortColumn, onSort, data }) => {\n  return (\n    <table className=\"table\">\n      <TableHeader columns={columns} sortColumn={sortColumn} onSort={onSort} />\n      <TableBody columns={columns} data={data} />\n    </table>\n  );\n};\n\nexport default Table;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Like from \"../common/like\";\nimport Table from \"../common/table\";\n\nclass MoviesTable extends Component {\n  columns = [\n    {\n      path: \"title\",\n      label: \"Title\",\n      content: (movie) => (\n        <Link to={`/movies/${movie._id}`}>{movie.title}</Link>\n      ),\n    },\n    { path: \"genre.name\", label: \"Genre\" },\n    { path: \"numberInStock\", label: \"Stock\" },\n    { path: \"dailyRentalRate\", label: \"Price\" },\n    {\n      key: \"like\",\n      content: (movie) => (\n        <Like liked={movie.liked} onClick={() => this.props.onLike(movie)} />\n      ),\n    },\n    {\n      key: \"delete\",\n      content: (movie) => (\n        <button\n          onClick={() => this.props.onDelete(movie)}\n          className=\"btn btn-sm btn-danger\"\n        >\n          Delete\n        </button>\n      ),\n    },\n  ];\n\n  render() {\n    const { movies, onSort, sortColumn } = this.props;\n\n    return (\n      <Table\n        columns={this.columns}\n        data={movies}\n        onSort={onSort}\n        sortColumn={sortColumn}\n      />\n    );\n  }\n}\n\nexport default MoviesTable;\n","import React from \"react\";\n\nconst ListGroup = (props) => {\n  const {\n    items,\n    textProperty,\n    valueProperty,\n    onItemSelect,\n    selectedItem,\n  } = props;\n\n  return (\n    <ul className=\"list-group\">\n      {items.map((item) => (\n        <li\n          onClick={() => onItemSelect(item)}\n          key={item[valueProperty]}\n          className={\n            item === selectedItem ? \"list-group-item active\" : \"list-group-item\"\n          }\n        >\n          {item[textProperty]}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nListGroup.defaultProps = {\n  textProperty: \"name\",\n  valueProperty: \"_id\",\n};\n\nexport default ListGroup;\n","import React from \"react\";\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\n\nconst Pagination = (props) => {\n  const { itemsCount, pageSize, currentPage, onPageChange } = props;\n  console.log(currentPage);\n  const pagesCount = Math.ceil(itemsCount / pageSize);\n  if (pagesCount === 1) return null;\n  const pages = _.range(1, pagesCount + 1);\n\n  return (\n    <nav>\n      <ul className=\"pagination\">\n        {pages.map((page) => (\n          <li\n            key={page}\n            className={page === currentPage ? \"page-item active\" : \"page-item\"}\n          >\n            <a className=\"page-link\" onClick={() => onPageChange(page)}>\n              {page}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nPagination.propTypes = {\n  itemsCount: PropTypes.number.isRequired,\n  pageSize: PropTypes.number.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n};\n\nexport default Pagination;\n","export const genres = [\n  { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n  { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n  { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" }\n];\n\nexport function getGenres() {\n  return genres.filter(g => g);\n}\n","import * as genresAPI from \"./fakeGenreService\";\n\nconst movies = [\n  {\n    _id: \"5b21ca3eeb7f6fbccd471815\",\n    title: \"Terminator\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 6,\n    dailyRentalRate: 2.5,\n    publishDate: \"2018-01-03T19:04:28.809Z\",\n    liked: true,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471816\",\n    title: \"Die Hard\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 5,\n    dailyRentalRate: 2.5,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471817\",\n    title: \"Get Out\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 8,\n    dailyRentalRate: 3.5,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471819\",\n    title: \"Trip to Italy\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181a\",\n    title: \"Airplane\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181b\",\n    title: \"Wedding Crashers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181e\",\n    title: \"Gone Girl\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 7,\n    dailyRentalRate: 4.5,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181f\",\n    title: \"The Sixth Sense\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 4,\n    dailyRentalRate: 3.5,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471821\",\n    title: \"The Avengers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5,\n  },\n];\n\nexport function getMovies() {\n  return movies;\n}\n\nexport function getMovie(id) {\n  return movies.find((m) => m._id === id);\n}\n\nexport function saveMovie(movie) {\n  let movieInDb = movies.find((m) => m._id === movie._id) || {};\n  movieInDb.title = movie.title;\n  movieInDb.genre = genresAPI.genres.find((g) => g._id === movie.genreId);\n  movieInDb.numberInStock = movie.numberInStock;\n  movieInDb.dailyRentalRate = movie.dailyRentalRate;\n\n  if (!movieInDb._id) {\n    movieInDb._id = Date.now();\n    movies.push(movieInDb);\n  }\n\n  return movieInDb;\n}\n\nexport function deleteMovie(id) {\n  let movieInDb = movies.find((m) => m._id === id);\n  movies.splice(movies.indexOf(movieInDb), 1);\n  return movieInDb;\n}\n","import _ from \"lodash\";\n\nexport function paginate(items, pageNumber, pageSize) {\n  const startIndex = (pageNumber - 1) * pageSize;\n  return _(items).slice(startIndex).take(pageSize).value();\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst NavBar = () => {\n  return (\n    <nav className=\"navbar navbar-expand-lg bg-color\">\n      <Link to=\"/\">\n        <span className=\"navbar-brand inactive\">movierama</span>\n      </Link>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarNavAltMarkup\"\n        aria-controls=\"navbarNavAltMarkup\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n        <div className=\"navbar-nav\">\n          {/* <NavLink className=\"nav-item nav-link active\" to=\"movies\">\n            Movies <span className=\"sr-only\">(current)</span>\n          </NavLink>\n          <NavLink className=\"nav-item nav-link\" to=\"customers\">\n            Customers\n          </NavLink>\n          <NavLink className=\"nav-item nav-link\" to=\"rentals\">\n            Rentals\n          </NavLink>\n          <NavLink className=\"nav-item nav-link\" to=\"/login\">\n            Login\n          </NavLink> */}\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\n\nconst SearchBox = ({ value, onChange }) => {\n  return (\n    <input\n      type=\"text\"\n      name=\"query\"\n      className=\"form-control my-3\"\n      placeholder=\"Search by title\"\n      value={value}\n      onChange={(e) => onChange(e.currentTarget.value)}\n    />\n  );\n};\n\nexport default SearchBox;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport MoviesTable from \"./moviesTable\";\nimport ListGroup from \"../common/listGroup\";\nimport Pagination from \"../common/pagination\";\nimport { getMovies, deleteMovie } from \"../services/fakeMovieService\";\nimport { getGenres } from \"../services/fakeGenreService\";\nimport { paginate } from \"../utils/paginate\";\nimport NavBar from \"./navBar\";\nimport _ from \"lodash\";\nimport SearchBox from \"./searchBox\";\n\nclass Movies extends Component {\n  state = {\n    movies: [],\n    genres: [],\n    currentPage: 1,\n    pageSize: 4,\n    searchQuery: \"\",\n    selectedGenre: null,\n    sortColumn: { path: \"title\", order: \"asc\" },\n  };\n\n  componentDidMount() {\n    const genres = [{ _id: \"\", name: \"All Genres\" }, ...getGenres()];\n\n    this.setState({ movies: getMovies(), genres });\n  }\n\n  handleDelete = (movie) => {\n    const movies = this.state.movies.filter((m) => m._id !== movie._id);\n    this.setState({ movies });\n\n    deleteMovie(movie._id);\n  };\n\n  handleLike = (movie) => {\n    const movies = [...this.state.movies];\n    const index = movies.indexOf(movie);\n    movies[index] = { ...movies[index] };\n    movies[index].liked = !movies[index].liked;\n    this.setState({ movies });\n  };\n\n  handlePageChange = (page) => {\n    this.setState({ currentPage: page });\n  };\n\n  handleGenreSelect = (genre) => {\n    this.setState({ selectedGenre: genre, searchQuery: \"\", currentPage: 1 });\n  };\n\n  handleSearch = (query) => {\n    this.setState({ searchQuery: query, selectedGenre: null, currentPage: 1 });\n  };\n\n  handleSort = (sortColumn) => {\n    this.setState({ sortColumn });\n  };\n\n  getPagedData = () => {\n    const {\n      pageSize,\n      currentPage,\n      sortColumn,\n      selectedGenre,\n      searchQuery,\n      movies: allMovies,\n    } = this.state;\n\n    let filtered = allMovies;\n    if (searchQuery)\n      filtered = allMovies.filter((m) =>\n        m.title.toLowerCase().startsWith(searchQuery.toLowerCase())\n      );\n    else if (selectedGenre && selectedGenre._id)\n      filtered = allMovies.filter((m) => m.genre._id === selectedGenre._id);\n\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n\n    const movies = paginate(sorted, currentPage, pageSize);\n\n    return { totalCount: filtered.length, data: movies };\n  };\n\n  render() {\n    const { length: count } = this.state.movies;\n    const { pageSize, currentPage, sortColumn, searchQuery } = this.state;\n\n    if (count === 0) return <p>There are no movies in the database.</p>;\n\n    const { totalCount, data: movies } = this.getPagedData();\n\n    return (\n      <React.Fragment>\n        <NavBar />\n        <main className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-3\">\n              <ListGroup\n                items={this.state.genres}\n                selectedItem={this.state.selectedGenre}\n                onItemSelect={this.handleGenreSelect}\n              />\n            </div>\n            <div className=\"col\">\n              <Link\n                to=\"/movies/new\"\n                className=\"btn btn-primary\"\n                style={{ marginBottom: 20 }}\n              >\n                New Movie\n              </Link>\n              <p>Showing {totalCount} movies in the database.</p>\n              <SearchBox value={searchQuery} onChange={this.handleSearch} />\n              <MoviesTable\n                movies={movies}\n                sortColumn={sortColumn}\n                onLike={this.handleLike}\n                onDelete={this.handleDelete}\n                onSort={this.handleSort}\n              />\n              <Pagination\n                itemsCount={totalCount}\n                pageSize={pageSize}\n                currentPage={currentPage}\n                onPageChange={this.handlePageChange}\n              />\n            </div>\n          </div>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Movies;\n","import React from \"react\";\n\nconst Customers = () => {\n  return <h1>Customers</h1>;\n};\n\nexport default Customers;\n","import React from \"react\";\n\nconst notFound = () => {\n  return <h1>Not Found</h1>;\n};\n\nexport default notFound;\n","import React from \"react\";\n\nconst Input = ({ name, label, error, ...rest }) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        {...rest}\n        name={name}\n        autoFocus\n        id={name}\n        className=\"form-control\"\n      />\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React from \"react\";\n\nconst Select = ({ name, label, options, error, ...rest }) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <select name={name} id={name} {...rest} className=\"form-control\">\n        <option value=\"\" />\n        {options.map((option) => (\n          <option key={option._id} value={option._id}>\n            {option.name}\n          </option>\n        ))}\n      </select>\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n    </div>\n  );\n};\n\nexport default Select;\n","import React, { Component } from \"react\";\nimport Input from \"../common/input\";\nimport Joi from \"joi-browser\";\nimport Select from \"../common/select\";\n\nclass Form extends Component {\n  state = {\n    data: {},\n    errors: {},\n  };\n\n  validate = () => {\n    const options = { abortEarly: false };\n    const result = Joi.validate(this.state.data, this.schema, options);\n    if (!result.error) return null;\n    const errors = {};\n    for (let item of result.error.details) errors[item.path[0]] = item.message;\n    return errors;\n  };\n\n  validateProperty = ({ name, value }) => {\n    const obj = { [name]: value };\n    const schema = { [name]: this.schema[name] };\n    const { error } = Joi.validate(obj, schema);\n    return error ? error.details[0].message : null;\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const errors = this.validate();\n    this.setState({ errors: errors || {} });\n    if (errors) return;\n    this.doSubmit();\n  };\n\n  handleChange = ({ currentTarget: input }) => {\n    const errors = { ...this.state.errors };\n    const errorMessage = this.validateProperty(input);\n    if (errorMessage) errors[input.name] = errorMessage;\n    else delete errors[input.name];\n\n    const data = { ...this.state.data };\n    data[input.name] = input.value;\n    this.setState({ data, errors });\n  };\n\n  renderButton(label) {\n    return (\n      <button disabled={this.validate()} className=\"btn btn-primary\">\n        {label}\n      </button>\n    );\n  }\n\n  renderInput(name, label, type = \"text\") {\n    const { data, errors } = this.state;\n    return (\n      <Input\n        type={type}\n        name={name}\n        value={data[name]}\n        label={label}\n        onChange={this.handleChange}\n        error={errors[name]}\n      />\n    );\n  }\n\n  renderSelect(name, label, options) {\n    const { data, errors } = this.state;\n\n    return (\n      <Select\n        name={name}\n        value={data[name]}\n        label={label}\n        options={options}\n        onChange={this.handleChange}\n        error={errors[name]}\n      />\n    );\n  }\n}\n\nexport default Form;\n","import React from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"../common/form\";\n\nclass LoginForm extends Form {\n  state = {\n    data: { username: \"\", password: \"\" },\n    errors: {},\n  };\n\n  schema = {\n    username: Joi.string().required().label(\"Username\"),\n    password: Joi.string().required().label(\"Password\"),\n  };\n\n  username = React.createRef();\n\n  doSubmit = () => {\n    console.log(\"Submitted\");\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Login</h1>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"username\", \"Username\")}\n          {this.renderInput(\"password\", \"Password\", \"password\")}\n          {this.renderButton(\"Login\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default LoginForm;\n","import React from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"../common/form\";\nimport NavBar from \"./navBar\";\nimport { getMovie, saveMovie } from \"../services/fakeMovieService\";\nimport { getGenres } from \"../services/fakeGenreService\";\n\nclass MovieForm extends Form {\n  state = {\n    data: {\n      title: \"\",\n      genreId: \"\",\n      numberInStock: \"\",\n      dailyRentalRate: \"\",\n    },\n    genres: [],\n    errors: {},\n  };\n\n  schema = {\n    _id: Joi.string(),\n    title: Joi.string().required().label(\"Title\"),\n    genreId: Joi.string().required().label(\"Genre\"),\n    numberInStock: Joi.number()\n      .required()\n      .min(0)\n      .max(100)\n      .label(\"Number in Stock\"),\n    dailyRentalRate: Joi.number()\n      .required()\n      .min(0)\n      .max(10)\n      .label(\"Daily Rental Rate\"),\n  };\n\n  componentDidMount() {\n    const genres = getGenres();\n    this.setState({ genres });\n\n    const movieId = this.props.match.params.id;\n    if (movieId === \"new\") return;\n\n    const movie = getMovie(movieId);\n    if (!movie) return this.props.history.replace(\"/not-found\");\n\n    this.setState({ data: this.mapToViewModel(movie) });\n  }\n\n  mapToViewModel(movie) {\n    return {\n      _id: movie._id,\n      title: movie.title,\n      genreId: movie.genre._id,\n      numberInStock: movie.numberInStock,\n      dailyRentalRate: movie.dailyRentalRate,\n    };\n  }\n\n  doSubmit = () => {\n    saveMovie(this.state.data);\n\n    this.props.history.push(\"/movies\");\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <NavBar />\n        <main className=\"container\">\n          <div>\n            <span className=\"title\">add movie</span>\n            <form onSubmit={this.handleSubmit}>\n              {this.renderInput(\"title\", \"Title\")}\n              {this.renderSelect(\"genreId\", \"Genre\", this.state.genres)}\n              {this.renderInput(\"numberInStock\", \"Number in Stock\", \"number\")}\n              {this.renderInput(\"dailyRentalRate\", \"Rate\")}\n              {this.renderButton(\"Save\")}\n            </form>\n          </div>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default MovieForm;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Start extends Component {\n  state = {};\n  render() {\n    return (\n      <div className=\"start-bg\">\n        <main className=\"container-entry\">\n          <h1>\n            <span className=\"landing\">\n              <p class=\"inactive\" style={{ fontSize: 45 }}>\n                movierama\n              </p>\n              <p>Explore our movie collection!</p>\n            </span>\n          </h1>\n\n          <Link to=\"/movies\">\n            <div class=\"btn-location\">\n              <button\n                className=\"btn btn-entry inactive\"\n                style={{ fontSize: 25 }}\n              >\n                enter\n              </button>\n            </div>\n          </Link>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default Start;\n","import React from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"../common/form\";\n\nclass RegisterForm extends Form {\n  state = {\n    data: { username: \"\", password: \"\", name: \"\" },\n    errors: {},\n  };\n\n  schema = {\n    username: Joi.string().required().email().label(\"Username\"),\n    password: Joi.string().required().min(5).label(\"Password\"),\n    name: Joi.string().required().label(\"Name\"),\n  };\n\n  doSubmit = () => {\n    console.log(\"Submitted\");\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Register</h1>\n        <form onSubmit={this.handleSubmit}>\n          {this.renderInput(\"name\", \"Name\")}\n          {this.renderInput(\"username\", \"Username\")}\n          {this.renderInput(\"password\", \"Password\", \"password\")}\n          {this.renderButton(\"Register\")}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default RegisterForm;\n","import React, { Component } from \"react\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport Movies from \"./components/movies\";\nimport Customers from \"./components/customers\";\nimport Rentals from \"./components/rentals.jsx\";\nimport NotFound from \"./components/notFound\";\nimport LoginForm from \"./components/loginForm\";\nimport MovieForm from \"./components/movieForm\";\nimport Start from \"./components/start\";\nimport \"./App.css\";\nimport RegisterForm from \"./components/registerForm\";\n\nclass App extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Switch>\n          <Route path=\"/start\" component={Start}></Route>\n          <Route path=\"/register\" component={RegisterForm} />\n          <Route path=\"/login\" component={LoginForm} />\n          <Route path=\"/movies/:id\" component={MovieForm} />\n          <Route path=\"/movies\" component={Movies}></Route>\n          <Route path=\"/customers\" component={Customers}></Route>\n          <Route path=\"/rentals\" component={Rentals}></Route>\n          <Route path=\"/not-found\" component={NotFound}></Route>\n          <Redirect from=\"/\" exact to=\"/start\" />\n          <Redirect to=\"/not-found\" />\n        </Switch>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}